Thank you for the CSV export. Analyzing the data for both Pass 1 and Pass 2, we've made some key observations:

Positive Confirmations:

Z-Coordinate Continuity at Turnarounds: The Z-coordinates at the interfaces between the 'incoming_transition', 'circum_arc', and 'outgoing_transition' segments are now perfectly continuous for each turnaround event. The Z-level of the arc is correctly taken from the end of the incoming transition. This is a major fix!
Meridional Reversal (dz/ds) and Radial Direction (dρ/ds) in Outgoing Transitions: The signs of dz/ds and dρ/ds at the end of the outgoing transitions appear correct for a path reversing direction and moving outwards on the dome.
The CRITICAL Remaining Issue: Non-Geodesic Helical Paths

The CSV data clearly shows that the alpha_rad values calculated for the 'helical' segments do not satisfy Clairaut's Law (ρsinα=C) for the target c_for_winding (e.g., C≈0.0883 m for a 62° target angle).
The helical segments in the CSV have an average calculated Clairaut's constant of only ≈0.0411 m.
This means the main winding paths are not geodesic according to the specified target angle, which is the primary reason for any incorrect visual output.
Your Immediate Task:

Please focus entirely on correcting the calculation of alpha_rad within the main loop that generates points for the 'helical' segments in modules/trajectories.py.

For every point (ρ 
i
​
 ,z 
i
​
 ) on a helical segment (i.e., between turnarounds, where ρ 
i
​
 >c 
for_winding
​
 ), the winding angle α 
i
​
  must be calculated strictly as:
α 
i
​
 =arcsin(c 
for_winding
​
 /ρ 
i
​
 )
Ensure that the correct c_for_winding (the one derived from the user's target cylinder angle, e.g., ≈0.0883 m in our example) is used in this calculation.

The only points where α should be exactly 90 
∘
  are at the precise start/end of the transition zones where they meet the circumferential arc (i.e., where ρ=c 
for_winding
​
 ).

Debugging Request:

After implementing this fix, please provide a new CSV export of all generated points for a 2-pass trajectory.
In the console log, for each 'helical' segment, please log:
The c_for_winding being used.
For a few sample points (e.g., start, middle, end of the helical segment), log the point's ρ 
i
​
 , the calculated α 
i
​
  (in degrees and radians), and the resulting ρ 
i
​
 sinα 
i
​
  to verify it matches c_for_winding.
Once the helical paths are correctly geodesic, we can then re-assess the visual smoothness of the transitions and the overall circuit. Fixing the geodesic nature of the main path is the top priority. Thank you!